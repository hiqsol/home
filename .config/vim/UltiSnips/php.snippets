snippet c "PHP Class" b
/**
 * Class ${1:`!p snip.rv = snip.basename or "ClassName"`}.
 * @author Andrii Vasyliev <sol@hiqdev.com>
 */
class ${2:$1}
{
	${0:${VISUAL}}
}
endsnippet

snippet @a "PHP Author"
@author Andrii Vasyliev <sol@hiqdev.com>
endsnippet

snippet @author "PHP Author"
@author Andrii Vasyliev <sol@hiqdev.com>
endsnippet

snippet inh "PHPdoc inheritdoc"
/**
 * {@inheritdoc}
 */
endsnippet

snippet gsm "PHP Getter and Setter" b
/** @var ${2:string} */
protected $${1:value};

/**
 * Sets the value of ${3:$1}.
 * @param $2 $$1
 * @return ${4:self}
 */
${5:public} function set${1/_?(\w+\s*)/\u$1/}(${7:$2 }$$1): $4
{
	$this->${8:$1} = $$1;
	return $this;
}

/**
 * Gets the value of ${9:$3}.
 * @return ${10:$2}
 */
${11:$5} function get${1/_?(\w+\s*)/\u$1/}(): $2
{
	return $this->$8;
}
endsnippet

snippet to "PHP TODO"
/// TODO 
endsnippet

snippet x "PHP XXX"
/// XXX 
endsnippet

snippet vd "PHP var_dump & die"
var_dump(__FILE__ . ':' . __LINE__ . ' ' . __METHOD__, $${1:res});die;
endsnippet

snippet pvd "PHP PRE + var_dump & die"
echo '<pre>';var_dump(__FILE__ . ':' . __LINE__ . ' ' . __METHOD__, $${1:res});die;
endsnippet

snippet dd "PHP die"
die(__FILE__ . ':' . __LINE__ . ' ' . __METHOD__);
endsnippet

snippet dl "PHP dlog"
dlog(__FILE__ . ':' . __LINE__ . ' ' . __METHOD__, $${1:res});
endsnippet

snippet dfl "PHP dlog"
dlog(__FILE__ . ':' . __LINE__);
endsnippet

snippet try "PHP try"
try {
	$1
} catch (\Exception $${2:e}) {
}
endsnippet

snippet xdebug.overload_var_dump "Disable xdebug var_dump overload"
ini_set('xdebug.overload_var_dump', 'off');
endsnippet
